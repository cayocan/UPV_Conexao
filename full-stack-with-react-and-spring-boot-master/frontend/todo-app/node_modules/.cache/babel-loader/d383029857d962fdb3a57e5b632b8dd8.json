{"ast":null,"code":"import _classCallCheck from \"/in28Minutes/git/full-stack-with-react-and-spring-boot/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/in28Minutes/git/full-stack-with-react-and-spring-boot/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/in28Minutes/git/full-stack-with-react-and-spring-boot/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/in28Minutes/git/full-stack-with-react-and-spring-boot/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/in28Minutes/git/full-stack-with-react-and-spring-boot/frontend/todo-app/src/components/counter/Counter.jsx\";\nimport React, { Component } from 'react';\nimport './Counter.css';\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  //Define the initial state in a constructor\n  //state => counter 0\n  function Counter() {\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Counter).call(this)); //Error 1\n\n    _this.render = function () {\n      return React.createElement(\"div\", {\n        className: \"counter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: _this.increment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"+1\"), React.createElement(\"span\", {\n        className: \"count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, _this.state.counter));\n    };\n\n    _this.increment = function () {\n      //Update state - counter++\n      //console.log('increment');\n      //this.state.counter++; //Bad Practice\n      _this.setState({\n        counter: _this.state.counter + 1\n      });\n    };\n\n    _this.state = {\n      counter: 0 //this.increment = this.increment.bind(this);\n\n    };\n    return _this;\n  }\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["/in28Minutes/git/full-stack-with-react-and-spring-boot/frontend/todo-app/src/components/counter/Counter.jsx"],"names":["React","Component","Counter","render","increment","state","counter","setState"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,eAAP;;IAEMC,O;;;;;AACJ;AACA;AACA,qBAAc;AAAA;;AAAA;;AACV,kFADU,CACD;;AADC,UAUdC,MAVc,GAUL,YAAO;AACd,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,OAAO,EAAE,MAAKC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEA;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB,MAAKC,KAAL,CAAWC,OAApC,CAFA,CADJ;AAMD,KAjBa;;AAAA,UAmBdF,SAnBc,GAmBF,YAAM;AAAE;AAClB;AACA;AACA,YAAKG,QAAL,CAAc;AACVD,QAAAA,OAAO,EAAE,MAAKD,KAAL,CAAWC,OAAX,GAAqB;AADpB,OAAd;AAGD,KAzBa;;AAGV,UAAKD,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAG,CADD,CAIb;;AAJa,KAAb;AAHU;AAQb;;;EAXmBL,S;;AAgCtB,eAAeC,OAAf","sourcesContent":["import React, {Component} from 'react'\nimport './Counter.css'\n\nclass Counter extends Component {\n  //Define the initial state in a constructor\n  //state => counter 0\n  constructor() {\n      super(); //Error 1\n\n      this.state = {\n          counter : 0\n      }\n\n      //this.increment = this.increment.bind(this);\n  }\n  \n  render = () =>  {\n    return (\n        <div className=\"counter\">\n        <button onClick={this.increment} >+1</button>\n        <span className=\"count\">{this.state.counter}</span>\n        </div>\n    )\n  }\n  \n  increment = () => { //Update state - counter++\n    //console.log('increment');\n    //this.state.counter++; //Bad Practice\n    this.setState({\n        counter: this.state.counter + 1\n    });\n  }\n\n}\n\nexport default Counter"]},"metadata":{},"sourceType":"module"}