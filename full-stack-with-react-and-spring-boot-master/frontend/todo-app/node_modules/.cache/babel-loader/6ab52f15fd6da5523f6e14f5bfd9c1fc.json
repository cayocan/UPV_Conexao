{"ast":null,"code":"import _classCallCheck from \"/in28Minutes/git/full-stack-with-react-and-spring-boot/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/in28Minutes/git/full-stack-with-react-and-spring-boot/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/in28Minutes/git/full-stack-with-react-and-spring-boot/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/in28Minutes/git/full-stack-with-react-and-spring-boot/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/in28Minutes/git/full-stack-with-react-and-spring-boot/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/in28Minutes/git/full-stack-with-react-and-spring-boot/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/in28Minutes/git/full-stack-with-react-and-spring-boot/frontend/todo-app/src/components/counter/Counter.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Counter.css';\n\nvar CounterButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CounterButton, _Component);\n\n  //Define the initial state in a constructor\n  //state => counter 0\n  function CounterButton() {\n    var _this;\n\n    _classCallCheck(this, CounterButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CounterButton).call(this)); //Error 1\n\n    _this.state = {\n      counter: 0\n    };\n    _this.increment = _this.increment.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CounterButton, [{\n    key: \"render\",\n    value: function render() {\n      //render = () =>  {\n      //const style = {fontSize : \"50px\", padding : \"15px 30px\"};\n      return React.createElement(\"div\", {\n        className: \"counter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.increment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"+\", this.props.by), React.createElement(\"span\", {\n        className: \"count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, this.state.counter));\n    }\n  }, {\n    key: \"increment\",\n    value: function increment() {\n      //Update state - counter++\n      //console.log('increment');\n      //this.state.counter++; //Bad Practice\n      this.setState({\n        counter: this.state.counter + this.props.by\n      });\n    }\n  }]);\n\n  return CounterButton;\n}(Component);\n\nCounter.defaultProps = {\n  by: 1\n};\nCounter.propTypes = {\n  by: PropTypes.number\n};\nexport default Counter;","map":{"version":3,"sources":["/in28Minutes/git/full-stack-with-react-and-spring-boot/frontend/todo-app/src/components/counter/Counter.jsx"],"names":["React","Component","PropTypes","CounterButton","state","counter","increment","bind","props","by","setState","Counter","defaultProps","propTypes","number"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,eAAP;;IAEMC,a;;;;;AACJ;AACA;AACA,2BAAc;AAAA;;AAAA;;AACV,wFADU,CACD;;AAET,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAG;AADD,KAAb;AAIA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,uDAAjB;AAPU;AAQb;;;;6BAES;AACV;AACE;AACA,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,KAAKD,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAoC,KAAKE,KAAL,CAAWC,EAA/C,CADJ,EAEI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKL,KAAL,CAAWC,OADb,CAFJ,CADJ;AAOD;;;gCAEW;AAAE;AACZ;AACA;AACA,WAAKK,QAAL,CAAc;AACVL,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB,KAAKG,KAAL,CAAWC;AAD/B,OAAd;AAGD;;;;EA/ByBR,S;;AAmC5BU,OAAO,CAACC,YAAR,GAAuB;AACnBH,EAAAA,EAAE,EAAG;AADc,CAAvB;AAIAE,OAAO,CAACE,SAAR,GAAoB;AAChBJ,EAAAA,EAAE,EAAGP,SAAS,CAACY;AADC,CAApB;AAIA,eAAeH,OAAf","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport './Counter.css'\n\nclass CounterButton extends Component {\n  //Define the initial state in a constructor\n  //state => counter 0\n  constructor() {\n      super(); //Error 1\n\n      this.state = {\n          counter : 0\n      }\n\n      this.increment = this.increment.bind(this);\n  }\n  \n  render()  {\n  //render = () =>  {\n    //const style = {fontSize : \"50px\", padding : \"15px 30px\"};\n    return (\n        <div className=\"counter\">\n            <button onClick={this.increment} >+{this.props.by}</button>\n            <span className=\"count\" \n            >{this.state.counter}</span>\n        </div>\n    )\n  }\n  \n  increment() { //Update state - counter++\n    //console.log('increment');\n    //this.state.counter++; //Bad Practice\n    this.setState({\n        counter: this.state.counter + this.props.by\n    });\n  }\n\n}\n\nCounter.defaultProps = {\n    by : 1\n}\n\nCounter.propTypes = {\n    by : PropTypes.number\n}\n\nexport default Counter"]},"metadata":{},"sourceType":"module"}