{"ast":null,"code":"import _classCallCheck from \"/in28Minutes/git/full-stack-with-react-and-spring-boot/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/in28Minutes/git/full-stack-with-react-and-spring-boot/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/in28Minutes/git/full-stack-with-react-and-spring-boot/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"/in28Minutes/git/full-stack-with-react-and-spring-boot/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/in28Minutes/git/full-stack-with-react-and-spring-boot/frontend/todo-app/src/components/counter/Counter.jsx\";\nimport React, { Component } from 'react';\nimport './Counter.css';\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  //Define the initial state in a constructor\n  //state => counter 0\n  function Counter() {\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    _this.state = {\n      counter: 0\n    };\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"counter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.increment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"+1\"), React.createElement(\"span\", {\n        className: \"count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"0\"));\n    }\n  }, {\n    key: \"increment\",\n    value: function increment() {\n      //Update state - counter++\n      console.log('increment');\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["/in28Minutes/git/full-stack-with-react-and-spring-boot/frontend/todo-app/src/components/counter/Counter.jsx"],"names":["React","Component","Counter","state","counter","increment","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,eAAP;;IAEMC,O;;;;;AAEJ;AACA;AACA,qBAAc;AAAA;;AAAA;;AACV,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAG;AADD,KAAb;AADU;AAIb;;;;6BAEQ;AACP,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,OAAO,EAAE,KAAKC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEA;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFA,CADJ;AAMD;;;gCAEW;AAAE;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;;;EArBmBN,S;;AA0BtB,eAAeC,OAAf","sourcesContent":["import React, {Component} from 'react'\nimport './Counter.css'\n\nclass Counter extends Component {  \n  \n  //Define the initial state in a constructor\n  //state => counter 0\n  constructor() {\n      this.state = {\n          counter : 0\n      }\n  }\n  \n  render() {\n    return (\n        <div className=\"counter\">\n        <button onClick={this.increment} >+1</button>\n        <span className=\"count\">0</span>\n        </div>\n    )\n  }\n  \n  increment() { //Update state - counter++\n    console.log('increment');\n  }\n\n}\n\n\nexport default Counter"]},"metadata":{},"sourceType":"module"}